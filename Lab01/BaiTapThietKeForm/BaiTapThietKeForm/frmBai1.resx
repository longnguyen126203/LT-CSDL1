<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IgIiICIiAiIgIiICIiD/2Q==
</value>
  </data>
</root>